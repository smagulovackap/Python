""" На вход программе подается строка текста – имя человека. Напишите программу, 
которая выводит на экран приветствие в виде слова «Привет» (без кавычек), 
после которого должна стоять запятая и пробел, а затем введенное имя. """
# name = input()
# print('Привет, ', name)

""" На вход программе подается строка текста – название футбольной команды. 
Напишите программу, которая повторяет ее на экране со словами « - чемпион!» (без кавычек). """
# fclub = input()
# print(fclub,'- Чемпион!')

""" Напишите программу, которая считывает три строки по очереди, 
а затем выводит их в той же последовательности, каждую на отдельной строчке. """
# a = input()
# b = input()
# c = input()
# print(a)
# print(b)
# print(c)

""" Напишите программу, которая считывает три строки по очереди, 
а затем выводит их в обратной последовательности, каждую на отдельной строчке. """
# a = input()
# b = input()
# c = input()
# print(c)
# print(b)
# print(a)

""" Рассмотрим следующий код: """

# print('a', 'b', 'c')
# print('d', 'e', 'f')
""" Результатом выполнения такого кода будет: """

# a b c
# d e f
""" Рассмотрим следующий код:  """

# print('a', 'b', 'c', sep='*')
# print('d', 'e', 'f', sep='**')

# print('a', 'b', 'c', end='\n\n\n')

# print('a', 'b', 'c', sep='', end='')

""" Напишите программу, которая выводит на экран текст «I***like***Python» (без кавычек). """
# print('I','like','Python', sep='***')

""" Напишите программу, которая считывает строку-разделитель и три строки, 
а затем выводит указанные строки через разделитель. """
# symbol = input()
# a = input()
# b = input()
# c = input()
# print(a, b, c, sep=symbol)

"""Напишите программу, которая приветствует пользователя, выводя слово «Привет» (без кавычек), 
после которого должна стоять запятая и пробел, а затем введенное имя и восклицательный знак. """
# a = input()
# print('Привет, ', a,'!', sep='')

""" 
Примечание 1. Названия переменных ничего не говорят интерпретатору, 
и даже в очень хорошо названной переменной не появится нужное значение, если мы сами его туда не запишем.

Примечание 2. Новое значение переменной вытесняет старое. Важно представлять, 
чему равно значение переменной в каждый момент времени.

Примечание 3. Переменные можно вводить в любой момент 
(не только в самом начале программы).

Примечание 4. В качестве названия переменных запрещено использовать ключевые (зарезервированные) слова. 

К ключевым словам в языке Python относятся:"""
# False;
# True;
# None;
# and;
# with;
# as;
# assert;
# break;
# class;
# continue;
# def;
# del;
# elif;
# else;
# except;
# finally;
# try;
# for;
# from;
# global;
# if;
# import;
# in;
# is;
# lambda;
# nonlocal;
# not;
# or;
# pass;
# raise;
# return;
# while;
# yield.

""" Напишите программу вывода на экран трех последовательно идущих чисел, каждое на отдельной строке. 
Первое число вводит пользователь, остальные числа вычисляются в программе. """

# a = int(input())
# b = a + 1
# c = a + 2
# print(a)
# print(b)
# print(c)

""" Напишите программу, которая считывает три целых числа и выводит на экран их сумму. 
Каждое число записано в отдельной строке. """

# a = int(input())
# b = int(input())
# c = int(input())
# print(a + b + c)

""" Напишите программу, вычисляющую объём куба и площадь его полной поверхности, по введённому значению длины ребра. """
# a = int(input())
# Volume = a * a * a
# Sequence = a * a * 6
# print('Объем =', Volume)
# print('Площадь полной поверхности =', Sequence)

""" Напишите программу вычисления значения функции f(a, b) = 3(a+b)^3 + 275b^2 - 127a -41 по введеным целым значениям a и b. """
# a = int(input('Введите первое значение'))
# b = int(input('Введите второе значение'))
# f = 3 * (a + b)**3 + 275*b**2 - 127 * a - 41
# print(f)

""" Напишите программу, которая считывает целое число, 
после чего на экран выводится следующее и предыдущее целое число с пояснительным текстом.
Sample Output 1:
Следующее за числом 20 число: 21
Для числа 20 предыдущее число: 19   """
# a = int(input())
# next = a + 1
# previous = a - 1
# print('Следующее за числом', a, 'число:', next)
# print('Для числа', a, 'предыдущее число:', previous)

""" Напишите программу, которая считает стоимость трех компьютеров, состоящих из монитора, системного блока, клавиатуры и мыши.

Формат входных данных
На вход программе подаётся четыре целых числа, каждое на отдельной строке. В первой строке — стоимость монитора, 
во второй строке — стоимость системного блока, в третьей строке — стоимость клавиатуры и в четвертой строке — стоимость мыши. """
# monitor = int(input())
# sysblock = int(input())
# keyboard = int(input())
# mouse = int(input())
# print((monitor + sysblock + keyboard + mouse) * 3)

""" Напишите программу, в которой вычисляется сумма, разность и произведение двух целых чисел, введенных с клавиатуры. """
# first = int(input())
# second = int(input())
# plus = first + second
# minus = first - second
# mult = first * second
# print(first, '+', second, '=', plus)
# print(first, '-', second, '=', minus)
# print(first, '*', second, '=', mult)

""" Арифметической прогрессией называется последовательность чисел  a1, a2,...,an, каждое из которых, начиная с a2, 
получается из предыдущего прибавлением к нему одного и того же постоянного числа d (разность прогрессии), то есть:
an =    an-1 + d
Если известен первый член прогрессии и её разность, то n-ый член арифметической прогрессии находится по формуле:
an = a1 + d(n-1)
Входные данные
На вход программе подаётся три целых числа: a1, d и n, каждое на новой строке
Выходные данные
Программа должна вывести n-ный член арифметической прогрессии. """
# a1 = int(input())
# d = int(input())
# n = int(input())
# an = a1 + d * (n - 1)
# print(an)

""" Напишите программу, которая считывает целое положительное число x, и выводит на экран последовательность чисел
x, 2x, 3x, 4x и 5x, разделённых тремя черточками. """
# number = int(input())
# print(number, 2 * number, 3 * number, 4 * number, 5 * number, sep='---')

# Примечание 5. Обратите внимание: результатом деления n % m при n < m является число n. Например, 5 % 9 = 5, 3 % 13 = 3 и т.д.

""" Геометрическая прогрессия - Bn = Bn-1 * q
Nный член геометрической прогрессии - Bn = B1 * q^n-1 """
# b1 = int(input())
# q = int(input())
# n = int(input())
# print(b1 * q**(n-1))

""" Напишите программу, которая находит полное число метров по заданному числу сантиметров. """
# sm = int(input())
# print(sm // 100)

""" n школьников делят k мандаринов поровну, неделящийся остаток остается в корзине. 
Сколько целых мандаринов достанется каждому школьнику? Сколько целых мандаринов останется в корзине? """
# pupils, mandarines = int(input()), int(input())
# howmany = mandarines // pupils
# less = mandarines % pupils
# print(howmany, less, sep='\n')

""" Безумный титан Танос собрал все 6 камней бесконечности и намеревается уничтожить половину населения Вселенной по щелчку пальцев. 
При этом если население Вселенной является нечетным числом, то титан проявит милосердие и округлит количество выживших в большую сторону. 
Помогите Мстителям подсчитать количество выживших. """
# people = int(input()) + 1
# print(people // 2)

# people = int(input())
# remainder = people % 2
# print(people // 2 + remainder)

# people = int(input()) 
# if people % 2 == 0:
#     print (people // 2)
# else:
#     print(people // 2 + 1)

""" В купейном вагоне имеется 9 купе с четырьмя местами для пассажиров в каждом. 
Напишите программу, которая определяет номер купе, в котором находится место с заданным номером 
(нумерация мест сквозная, начинается с 1). """
# seat = (int(input()) + 3) // 4
# print(seat)

# seat = (36 - (int(input()))) // 4
# print (9 - seat)

""" Напишите программу для пересчёта величины временного интервала, 
заданного в минутах, в величину, выраженную в часах и минутах. 
Sample Input 1:
150
Sample Output 1:
150 мин - это 2 час 30 минут.
"""
# number = int(input())
# print(number, 'мин - это', number // 60, 'час', number % 60, 'минут.')

# num = 947
# a = num % 10
# b = (num % 100) // 10
# c = num // 100
# print(a)
# print(b)
# print(c)

# num = int(input())
# last_digit = num % 10
# first_digit = num // 10
# print('Число десятков =', first_digit)
# print('Число единиц =', last_digit)

# num = int(input())
# last_digit = num % 10
# first_digit = num // 10
# print('Искомое число =', last_digit * 10 + first_digit)

# num = int(input())
# digit3 = num % 10
# digit2 = (num // 10) % 10
# digit1 = num // 100
# print(digit1, digit2, digit3, sep=',')

""" Напишите программу, в которой рассчитывается сумма и произведение цифр положительного трёхзначного числа. 
Сумма цифр = 6
Произведение цифр = 6"""
# num = int(input())
# a = num % 10
# b = (num // 10) % 10
# c = num // 100
# print('Сумма цифр =', a + b + c)
# print('Произведение цифр =', a*b*c)

""" Дано трехзначное число abc, в котором все цифры различны. Напишите программу, которая выводит шесть чисел, 
образованных при перестановке цифр заданного числа. 
Sample Input 1:
123
Sample Output 1:
123
132
213
231
312
321"""
# num = int(input())
# a, b, c = num // 100, (num // 10) % 10, num % 10
# print (a,b,c, '\n', a,c,b, '\n', b,a,c, '\n', b,c,a, '\n', c,a,b, '\n', c,b,a, sep='')

""""Напишите программу для нахождения цифр четырёхзначного числа.
Sample Output 1:
Цифра в позиции тысяч равна 3
Цифра в позиции сотен равна 2
Цифра в позиции десятков равна 8
Цифра в позиции единиц равна 1"""
# num = int(input())
# a, b, c, d = num // 1000, (num // 100) % 10, (num // 10) % 10, num % 10
# print('Цифра в позиции тысяч равна', a)
# print('Цифра в позиции сотен равна', b)
# print('Цифра в позиции десятков равна', c)
# print('Цифра в позиции единиц равна', d)

"""Напишите программу, которая выводит прямоугольник, по периметру состоящий из звездочек (*).
Примечание. Высота и ширина прямоугольника равны 4 и 17 звёздочкам соответственно."""
# print('*' * 17, '\n', '*', ' ' * 15, '*', '\n', '*', ' ' * 15, '*', '\n', '*' * 17, sep='')

"""Напишите программу, которая считывает два целых числа a и b и выводит на экран квадрат суммы 
и сумму квадратов этих чисел.
Sample Output 1:
Квадрат суммы 3 и 2 равен 25
Сумма квадратов 3 и 2 равна 13"""
# a, b = int(input()), int(input())
# print('Квадрат суммы', a, 'и', b, 'равен', (a+b)**2)
# print('Сумма квадратов', a, 'и', b, 'равна', a**2 + b**2)

"""Как известно, целые числа в языке Python не имеют ограничений, которые встречаются в других языках программирования. 
Напишите программу, которая считывает четыре целых положительных числа a,b,c и d и выводит на экран значение выражения 
a в степени b плюс с в степени d."""
# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# print(a**b + c**d)

"""Напишите программу, которая считывает целое положительное число n,n∈[1;9] и выводит значение числа 
n+nn+nnn.
Примечание. Для первого теста 1+11+111=123"""
# n = int(input())
# print(n + n*11 + n*111)

"""Напишите программу, которая считывает три числа и подсчитывает количество чётных чисел.
Решение. Программа, решающая поставленную задачу, может иметь вид:
num1, num2, num3 = int(input()), int(input()), int(input())
counter = 0  # переменная счётчик
if num1 % 2 == 0:
    counter = counter + 1  # увеличиваем счётчик на 1
if num2 % 2 == 0:
    counter = counter + 1  # увеличиваем счётчик на 1
if num3 % 2 == 0:
    counter = counter + 1  # увеличиваем счётчик на 1
print(counter)"""

"""Напишите программу, которая сравнивает пароль и его подтверждение. 
Если они совпадают, то программа выводит: «Пароль принят», иначе: «Пароль не принят»."""
# first, second = input(), input()
# if first == second:
#     print('Пароль принят')
# else:
#     print('Пароль не принят')

"""Напишите программу, которая определяет, является число четным или нечетным."""
# num = int(input())
# if num % 2 == 0:
#     print('Четное')
# else:
#     print('Нечетное')

"""Напишите программу, которая проверяет, что для заданного четырехзначного числа выполняется следующее соотношение: 
сумма первой и последней цифр равна разности второй и третьей цифр."""
# num = int(input())
# if (num // 1000) + (num % 10) == ((num // 100) % 10) - ((num // 10) % 10):
#     print('ДА')
# else:
#     print('НЕТ')

"""Напишите программу, которая определяет, разрешен пользователю доступ к интернет-ресурсу или нет.
Формат выходных данных
Программа должна вывести текст «Доступ разрешен» если возраст не менее 18, и «Доступ запрещен» в противном случае."""
# age = int(input())
# if age >= 18:
#     print('Доступ разрешен')
# else:
#     print('Доступ запрещен')

"""Напишите программу, которая определяет, являются ли три заданных числа (в указанном порядке) 
последовательными членами арифметической прогрессии.
Формат выходных данных
Программа должна вывести «YES» или «NO» (без кавычек) в соответствии с условием задачи."""
# a, b, c = int(input()), int(input()), int(input())
# if c - b  == b - a:
#     print('YES')
# else:
#     print('NO')

"""Напишите программу, которая определяет наименьшее из двух чисел."""
# a, b = int(input()), int(input())
# if a < b:
#     print(a)
# else:
#     print(b)

"""Напишите программу, которая определяет наименьшее из четырёх чисел."""
# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# if a > b:
#     a = b
# if c > d:
#     c = d
# if c > a:
#     c = a
# print(c)

"""Напишите программу, которая по введённому возрасту пользователя сообщает, к какой возрастной группе он относится:
до 13 включительно – детство;
от 14 до 24 – молодость;
от 25 до 59 – зрелость;
от 60 – старость."""
# age = int(input())
# if age <= 13:
#     print('детство')
# if 13 < age < 25:
#     print('молодость')
# if 24 < age < 60:
#     print('зрелость')
# if age >= 60:
#     print('старость')

"""Напишите программу, которая считывает три числа и подсчитывает сумму только положительных чисел."""
# a, b, c = int(input()), int(input()), int(input())
# if a >= 0 and b >= 0 and c >= 0:
#     print(a + b + c)
# if a < 0 <= c and b < 0:
#     print(c)
# if a < 0 and b >= 0 > c:
#     print(b)
# if a >= 0 > b and c < 0:
#     print(a)
# if a < 0 <= c and b >= 0:
#     print(b + c)
# if a >= 0 > b and c >= 0:
#     print(a + c)
# if a >= 0 > c and b >= 0:
#     print(a + b)
# if a < 0 and b < 0 and c < 0:
#     print(0)

# a, b, c = int(input()), int(input()), int(input())
# total = 0
# if a > 0:
#     total = total + a
# if b > 0:
#     total = total + b
# if c > 0:
#     total = total + c
# print(total)

# a, b, c = int(input()), int(input()), int(input())
# print((a if a>0 else 0) + (b if b>0 else 0) + (c if c>0 else 0))

"""Напишите программу, которая принимает целое числоx и определяет, принадлежит ли данное число указанному промежутку. 
(-1;17)"""
# x = int(input())
# if -1 < x < 17:
#     print('Принадлежит')
# else:
#     print('Не принадлежит')

"""Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное число указанным промежуткам.
[-3;7]"""
# x = int(input())
# if x <= -3 or x >= 7:
#     print('Принадлежит')
# else:
#     print('Не принадлежит')

"""Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное число указанным промежуткам.
(-30;-2] U (7; 25]"""
# x = int(input())
# if -30 < x <= -2 or 7 < x <= 25:
#     print('Принадлежит')
# else:
#     print('Не принадлежит')

"""Назовем число красивым, если оно является четырехзначным и делится нацело на 7 или на 17. 
Напишите программу, определяющую, является ли введённое число красивым. Программа должна вывести «YES», 
если число является красивым, или «NO» в противном случае."""
# x = int(input())
# if 1000 <= x <= 9999 and (x % 7 == 0 or x % 17 == 0):
#     print('YES')
# else:
#     print('NO')

"""Напишите программу, которая принимает три положительных числа и определяет, 
существует ли невырожденный треугольник с такими сторонами."""
# a, b, c = int(input()), int(input()), int(input())
# if a < (b + c) and b < (a + c) and c < (a + b):
#     print('YES')
# else:
#     print('NO')

"""Напишите программу, которая определяет, является ли год с данным номером високосным. 
Если год является високосным, то выведите «YES», иначе выведите «NO».
Год является високосным, если его номер кратен 4, но не кратен 100, или если он кратен 400."""
# year = int(input())
# if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
#     print('YES')
# else:
#     print('NO')

"""Даны две различные клетки шахматной доски. Напишите программу, которая определяет, может ли ладья попасть с 
первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца 
и номер строки сначала для первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом ладьи можно попасть во вторую, или «NO» в противном случае."""
# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# if a == c or b == d:
#     print('YES')
# else:
#     print('NO')

"""Даны две различные клетки шахматной доски. Напишите программу,  которая определяет, может ли король попасть с 
первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца 
и номер строки сначала для первой клетки, потом для второй клетки. 
Программа должна вывести «YES», если из первой клетки ходом короля можно попасть во вторую, или «NO» в противном случае."""
# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# turn1 = (a - c)
# turn2 = (b - d)
# if -1 <= turn1 <= 1 and -1 <= turn2 <= 1:
#     print('YES')
# else:
#     print('NO')

"""Зум бросил вызов Флэшу и предложил ему честный поединок в виде гонки вокруг магнетара. 
В случае проигрыша эта нейтронная звезда зарядится и уничтожит мир, поэтому Флэш решил не рисковать без причины, 
и узнать у своего друга Циско Рамона есть ли смысл принимать вызов. Циско получил данные, что скорость Зума равна 
n, а скорость Флэша равна k."""
# n, k = int(input()), int(input())
# if n > k:
#     print('NO')
# elif n < k:
#     print ('YES')
# else:
#     print("Don't know")

"""Напишите программу, которая принимает три положительных числа и определяет вид треугольника, 
длины сторон которого равны введенным числам."""
# a, b, c = int(input()), int(input()), int(input())
# if a == b != c or b == c != a or a == c != b:
#     print('Равнобедренный')
# elif a == b == c:
#     print('Равносторонний')
# else:
#     print('Разносторонний')

"""Даны три различных целых числа. Напишите программу, которая находит среднее по величине число."""
# a, b, c = int(input()), int(input()), int(input())
# if a < b < c:
#     print(b)
# elif a < c < b:
#     print(c)
# elif b < c < a:
#     print(c)
# elif b < a < c:
#     print(a)
# elif c < a < b:
#     print(a)
# elif c < b < a:
#     print(b)

# a, b, c = int(input()), int(input()), int(input())
# if a < b < c or a > b > c:
#     print(b)
# elif b < c < a or b > c > a:
#     print(c)
# else:
#     print(a)

"""Дан порядковый номер месяца (1,2,…, 12). Напишите программу, которая выводит на экран количество дней в этом месяце. 
Принять, что год является невисокосным.
Примечание. Постарайтесь написать программу так, чтобы в ней было не более трех условий."""
# month = int(input())
# if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:
#     print('31')
# elif month == 4 or month == 6 or month == 9 or month == 11:
#     print('30')
# else:
#     print('28')

"""Известен вес боксера-любителя (целое число). Известно, что вес таков, 
что боксер может быть отнесён к одной из трех весовых категорий:
Легкий вес – до 60 кг;
Первый полусредний вес – до 64 кг;
Полусредний вес – до 69 кг.
Напишите программу, определяющую, в какой категории будет выступать данный боксер."""
# weight = int(input())
# if weight < 60:
#     print('Легкий вес')
# if 60 <= weight < 64:
#     print('Первый полусредний вес')
# elif 64 <= weight < 69:
#     print('Полусредний вес')

# n = int(input())
# if n < 60:
#     print('Легкий вес')
# elif n < 64:
#     print('Первый полусредний вес')
# elif n < 69:
#     print('Полусредний вес')

"""Напишите программу, которая считывает с клавиатуры два целых числа и строку. 
Если эта строка является обозначением одной из четырёх математических операций (+, -, *, /), 
то выведите результат применения этой операции к введённым ранее числам, в противном случае выведите «Неверная операция». 
Если пользователь захочет поделить на ноль, выведите текст «На ноль делить нельзя!»."""
# a, b, op = int(input()), int(input()), input()
# if op == '*':
#     print(a * b)
# elif op == '+':
#     print(a + b)
# elif op == '-':
#     print(a - b)
# elif op == '/':
#     if b == 0:
#         print('На ноль делить нельзя!')
#     else:
#         print(a / b)
# else:
#     print('Неверная операция')

"""Красный, синий и желтый называются основными цветами, потому что их нельзя получить путем смешения других цветов. 
При смешивании двух основных цветов получается вторичный цвет:
если смешать красный и синий, то получится фиолетовый;
если смешать красный и желтый, то получится оранжевый;
если смешать синий и желтый, то получится зеленый.
Напишите программу, которая считывает названия двух основных цветов для смешивания. 
Если пользователь вводит что-нибудь помимо названий «красный», «синий» или «желтый», то программа должна вывести сообщение об ошибке. 
В противном случае программа должна вывести название вторичного цвета, который получится в результате."""
# c1, c2 = input(), input()
# if (c1 == 'красный' and c2 == 'желтый') or (c2 == 'красный' and c1 == 'желтый'):
#     print('оранжевый')
# elif (c1 == 'красный' and c2 == 'синий') or (c2 == 'красный' and c1 == 'синий'):
#     print('фиолетовый')
# elif (c1 == 'синий' and c2 == 'желтый') or (c2 == 'синий' and c1 == 'желтый'):
#     print('зеленый')
# elif c1 == c2 and (c1 == 'красный' or c1 == 'желтый' or c1 == 'синий'):
#     print(c1)
# else:
#     print('ошибка цвета')

"""На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов: 
карман 0 зеленый;
для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
Напишите программу, которая считывает номер кармана и показывает, является ли этот карман зеленым, красным или черным. 
Программа должна вывести сообщение об ошибке, если пользователь вводит число, которое лежит вне диапазона от 0 до 36."""
# a = int(input())
# if ((1 <= a < 10 or 19 <= a < 28) and a % 2 != 0) or ((29 < a <= 36 or 11 < a <= 18) and a % 2 == 0):
#     print('красный')
# elif ((1 < a <= 10 or 19 < a <= 28) and a % 2 == 0) or ((29 <= a < 36 or 11 <= a < 18) and a % 2 != 0):
#     print('черный')
# elif a == 0:
#     print('зеленый')
# else:
#     print('ошибка ввода')

"""На числовой прямой даны два отрезка: [a1;b1] и [a2;b2].Напишите программу, которая находит их пересечение.
Пересечением двух отрезков может быть:отрезок, точка, пустое множество.
Формат выходных данных
Программа должна вывести на экран границы отрезка, являющегося пересечением, либо общую точку, либо текст «пустое множество»."""
# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# if a < b < c < d or c < d < a < b:
#     print('пустое множество')
# elif a < c < b < d:
#     print(c, b)
# elif a < c < d < b:
#     print(c, d)
# elif c < a < d < b:
#     print(a, d)
# elif c < a < b < d:
#     print(a, b)
# elif b == c:
#     print(c)
# elif a == d:
#     print(d)
# elif a == c and (b < d):
#     print(a, b)
# elif a == c and (b > d):
#     print(a, d)
# elif b == d and (a < c):
#     print(c, d)
# elif b == d and (a > c):
#     print(a, d)

# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# if a > c:
#     a, b, c, d = c, d, a, b
# if b < c:
#     print('пустое множество')
# elif b == c:
#     print(b)
# else:
#     if b > d:
#         b, d = d, b
#     print(c, b)

# a1, b1, a2, b2 = int(input()), int(input()), int(input()), int(input())
# if b1 < a2 or b2 < a1:
#     print('пустое множество')
# else:
#     if a1 > a2:
#         a2 = a1
#     if b1 > b2:
#         b1 = b2
#     if a2 == b1:
#         print(a2)
#     else:
#         print(a2, b1)

"""Напишите программу, которая определяет, оканчивается ли год с данным номером на два нуля. 
Если год оканчивается, то выведите «YES», иначе выведите «NO»."""
# year = int(input())
# if (year % 100) // 10 == 0 and year % 10 == 0:
#     print('YES')
# else:
#     print('NO')

"""Заданы две клетки шахматной доски. Напишите программу, которая определяет имеют ли указанные клетки один цвет или нет. 
Если они покрашены в один цвет, то выведите слово «YES», а если в разные цвета — то «NO»."""
# x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
# # t1 = a % 2
# # t2 = b % 2
# # t3 = c % 2
# # t4 = b % 2
# if x1 == y1 and x2 == y2 or x1 == x2 and y1 == y2 or x1 == y2 and x2 == y1:
#     print('YES')
# elif y1 - x1 =
#     print('YES')
# else:
#     print('NO')

"""На вход программе подается число n – количество собачьих лет. 
Напишите программу, которая вычисляет возраст собаки в человеческих годах.
Примечание. В течение первых двух лет собачий год равен 10.5 человеческим годам. 
После этого каждый год собаки равен 4 человеческим годам."""
# n = int(input())
# first_dog_age = (1 * 10.5)
# second_dog_age = (2 * 10.5)
# dog_age = 4 * (n - 2)
# if n == 1:
#     print(first_dog_age)
# elif n == 2:
#     print(int(second_dog_age))
# elif n > 2:
#     print(int(second_dog_age + dog_age))

# age = int(input())
# if 0 < age <= 2:
#     print(age * 10.5)
# else:
#     print(2 * 10.5 + (age - 2) * 4)

# """Дано положительное действительное число. Выведите его первую цифру после десятичной точки."""
# a = float(input())
# result = (a - int(a)) * 10
# print(int(result))

"""Дано положительное действительное число. Выведите его дробную часть."""
# a = float(input())
# result = (a - int(a))
# print(result)

"""Напишите программу, которая находит наименьшее и наибольшее из пяти чисел.
Sample Output 1:
Наименьшее число = 1
Наибольшее число = 5"""
# a, b, c, d, e = int(input()), int(input()), int(input()), int(input()), int(input())
# print('Наименьшее число =', min(a, b, c, d, e))
# print('Наибольшее число =', max(a, b, c, d, e))

"""Напишите программу, которая упорядочивает три числа от большего к меньшему."""
# a, b, c = int(input()), int(input()), int(input())
# first = max(a, b, c)
# last = min(a, b, c)
# mid = (a + b + c) - (first + last)
# print(first, mid, last, sep='\n')

"""Назовем число интересным, если в нем разность максимальной и минимальной цифры равняется средней по величине цифре. 
Напишите программу, которая определяет интересное число или нет. 
Если число интересное, следует вывести – «Число интересное» иначе «Число неинтересное»."""
# num = int(input())
# first = num // 100
# sec = (num // 10) % 10
# last = num % 10
# mid = (first + sec + last) - (max(first, sec, last) + min(first, sec, last))
# if max(first, sec, last) - min(first, sec, last) == mid:
#     print('Число интересное')
# else:
#     print('Число неинтересное')
#
# x = int(input())
# a = x % 10
# b = x // 10 % 10
# c = x // 100
# if a + b + c == 2 * max(a, b, c):
#     print("Число интересное")
# else:
#     print("Число неинтересное")

"""Даны пять чисел a1, a2, a3, a4, a5. Напишите программу, которая вычисляет сумму их модулей."""
# a1, a2, a3, a4, a5 = float(input()), float(input()), float(input()), float(input()), float(input())
# print(abs(a1) + abs(a2) + abs(a3) + abs(a4) + abs(a5))

"""Прогуливаясь по Манхэттену, вы не можете попасть из точки А в точку Б по кратчайшему пути. 
Если только вы не умеете проходить сквозь стены, вам обязательно придется идти вдоль его параллельно-перпендикулярных улиц."""
# p1, p2, q1, q2 = int(input()), int(input()), int(input()), int(input())
# S = abs(p1 - q1) + abs(p2 - q2)
# print(S)

"""Число e = 3.141592653589793
   Число e = 2.718281828459045"""

"""Модуль math
Модуль math – один из наиважнейших в Python. Этот модуль предоставляет обширный функционал для проведения 
вычислений с вещественными числами (числами с плавающей точкой).
Для использования этих функций в начале программы необходимо подключить модуль, что делается командой import:
import math

Особенности подключения модулей
Как можно заметить из примера выше, для вызова функции мы вынуждены указывать название модуля и символ точки. 
С другой стороны, если функции используются достаточно часто, то такой вызов 
(постоянное указание названия модуля и символа точки) может усложнить программу и сделать её менее читабельной. 
Для того, чтобы не указывать название модуля и символ точки при вызове функций, мы пишем следующий код:

from math import *

from math import sqrt, ceil

print(sqrt(25))
print(ceil(34.7))

print(floor(12.8))  # приведет к ошибке, так как функция floor не подключена

Функция	Описание
Округления
int()	Округляет число в сторону нуля
round(x)	Округляет число x до ближайшего целого. Если дробная часть числа равна 0.5, то число округляется до ближайшего четного числа
round(x, n)	Округляет число x до n знаков после точки
floor(x)	Округляет число x вниз («пол»)
ceil(x)	Округляет число x вверх («потолок»)
abs(x)	Модуль числа x (абсолютная величина)

Корни, логарифмы, степени и факториал
sqrt(x)	Квадратный корень числа x
pow(x, n)	Возведение числа x в степень n
log(x)	Натуральный логарифм числа x. Основание натурального логарифма равно числу e
log10(x)	Десятичный логарифм числа x. Основание десятичного логарифма равно числу 10
log(x, b)	Логарифм числа x по основанию b
factorial(n)	Факториал натурального числа n

Тригонометрия
degrees(x)	Преобразует угол x, заданный в радианах, в градусы
radians(x)	Преобразует угол x, заданный в градусах, в радианы
cos(x)	Косинус угла x, задаваемого в радианах
sin(x)	Синус угла x, задаваемого в радианах
tan(x)	Тангенс угла x, задаваемого в радианах
acos(x)	Возвращает угол в радианах от до π, cos которого равен x
asin(x)	Возвращает угол в радианах от -π/2 до π/2, sin которого равен x
atan(x)	Возвращает угол в радианах от -π/2 до π/2, tan которого равен x
atan2(y, x)	Полярный угол (в радианах) точки с координатами (x, y)

Примечание 1. Все функции модуля math возвращают значение, которое можно вывести на экран, присвоить другой переменной или использовать в математическом выражении.

Примечание 2. Для использования функций int(), float(), abs(), min(), max(), round() подключать модуль math нет необходимости. Это так называемые встроенные функции.

Примечание 3. Вызов функций pow(x, n) можно заменить использованием оператора возведения в степень: x**n."""

"""Напишите программу определяющую евклидово расстояние между двумя точками, координаты которых заданы."""
# a, b, c, d = float(input()), float(input()), float(input()), float(input())
# import math
# temp = ((a - c)**2) + ((b - d)**2)
# print(math.sqrt(temp))

"""Напишите программу определяющую площадь круга и длину окружности по заданному радиусу R"""
# R = float(input())
# from math import pi
# S = pi*(R ** 2)
# C = 2 * pi * R
# print(S, C, sep='\n')

"""Формат выходных данных
Программа должна вывести 4 числа – среднее арифметическое, геометрическое, гармоническое и квадратичное."""
# a, b = float(input()), float(input())
# from math import sqrt
# arithmetic = (a + b) / 2
# geometric = sqrt(a * b)
# garmonic = 2 * a * b / (a + b)
# quadratic = sqrt((a ** 2 + b ** 2) / 2)
# print(arithmetic, geometric, garmonic, quadratic, sep='\n')

"""Напишите программу, вычисляющую значение тригонометрического выражения"""
# x = float(input())
# from math import sin, cos, tan, radians
# rad = radians(x)
# result = sin(rad) + cos(rad) + (tan(rad)**2)
# print(result)

"""Напишите программу, вычисляющую значение ⌈x⌉ +⌊x⌋ по заданному вещественному числу x."""
# x = float(input())
# from math import ceil, floor
# result = ceil(x) + floor(x)
# print(result)

"""Даны три вещественных числа a, b, c. Напишите программу, которая находит вещественные корни квадратного уравнения 
a * x**2 + b * x + c = 0"""
# a, b, c = float(input()), float(input()), float(input())
# from math import sqrt
# D = b**2 - 4 * a * c
# if D > 0:
#     x1 = (-b + sqrt(D)) / (2 * a)
#     x2 = (-b - sqrt(D)) / (2 * a)
#     print(min(x1, x2), max(x1, x2), sep='\n')
# elif D == 0:
#     x = -b / (2 * a)
#     print(x)
# elif D < 0:
#     print('Нет корней')

"""Напишите программу, которая находит площадь указанного правильного многоугольника."""
# n, a = int(input()), float(input())
# from math import tan, pi
# S = (n * a**2) / (4 * tan(pi/n))
# print(S)

"""Напишите программу, которая выводит звездный треугольник в соответствии с примером.
Sample Input 1:
3
Sample Output 1:
***
**
*
"""
# num = int(input())
# for i in range(num + 1):
#     x = num - i
#     print('*' * x)

"""Напишите программу, которая предсказывает размер популяции организмов. 
Программа должна выводить размер популяции в каждый день, начиная с 1 и заканчивая n-м днем."""
# m, p, n = int(input()), int(input()), int(input())
# proc = p / 100
# for i in range(n):
#     print(i + 1, m * (proc + 1)**i)

# m, p, n = int(input()), int(input()), int(input())
# for i in range(n):
#     print(i + 1, m)
#     m *= 1 + p / 100

"""Даны два целых числа m и n (m≤n). Напишите программу, которая выводит все числа от m до n включительно."""
# m, n = int(input()), int(input())
# for i in range(m, n + 1):
#     print(i)

"""Даны два целых числа m и n. Напишите программу, которая выводит все числа от m до n включительно в порядке возрастания, 
если m<n, или в порядке убывания в противном случае."""
# m, n = int(input()), int(input())
# if m < n:
#     for i in range(m, n + 1):
#         print(i)
# else:
#     for i in range(m, n - 1, -1):
#         print(i)

"""Даны два целых числа m и n (m>n). Напишите программу, которая выводит все нечетные числа от m до n включительно в порядке убывания."""
# m, n = int(input()), int(input())
# for i in range(m, n, -2):
#     if m % 2 != 0:
#         print(i)
#     if m % 2 == 0:
#         print(i - 1)

# m, n = int(input()), int(input())
# for i in range(m - 1 + m % 2, n - 1, -2):
#     print(i)

"""Даны два натуральных числа m и n (m≤n). Напишите программу, которая выводит все числа от m до n включительно 
удовлетворяющие хотя бы одному из условий:
число кратно 17;
число оканчивается на 9;
число кратно 3 и 5 одновременно."""
# m, n = int(input()), int(input())
# for i in range(m, n + 1):
#     if i % 17 == 0 or i % 10 == 9 or i % 15 == 0:
#         print(i)

"""Дано натуральное число n. Напишите программу, которая выводит таблицу умножения на n."""
# n = int(input())
# for i in range(1, 11):
#     print(n, 'x', i, '=', n * i, end=' ')


# num = int(input())
# flag = True
#
# for i in range(2, num):
#     if num % i == 0:        #  если исходное число делится на какое-либо отличное от 1 и самого себя
#         flag = False
#
# if num == 1:
#     print('Это единица, она не простая и не составная')
# elif flag == True:
#     print('Число простое')
# else:
#     print('Число составное')

"""На вход программе подаются два целых числа a и b (a≤b). 
Напишите программу, которая подсчитывает количество чисел в диапазоне от a до b включительно, 
куб которых оканчивается на 4 или 9."""
# a, b = int(input()), int(input())
# counter = 0
# for i in range(a, b + 1):
#     if i**3 % 10 == 4 or i**3 % 10 == 9:
#         counter += 1
# print(counter)

"""На вход программе подается натуральное число n, а затем n целых чисел, каждое на отдельной строке. 
Напишите программу, которая подсчитывает сумму введенных чисел. """
# first, total = int(input()), 0
# for i in range(first):
#     a = int(input())
#     total += a
# print(total)

"""На вход программе подается натуральное число n. Напишите программу, которая вычисляет значение выражения"""
# from math import log
# n = int(input())
# total = 0
# for i in range(1, n + 1):
#     total += 1/i
# print(total - log(n))

"""На вход программе подается натуральное число n. Напишите программу, которая подсчитывает сумму тех чисел от 1 до n (включительно) 
квадрат которых оканчивается на 2,5 или 8."""
# n = int(input())
# total = 0
# for i in range(1, n + 1):
#     if (i ** 2) % 10 == 2 or (i ** 2) % 10 == 5 or (i ** 2) % 10 == 8:
#         total += i
# print(total)

"""На вход программе подается натуральное число n. Напишите программу, которая вычисляет n!."""
# n, total = int(input()), 1
# for i in range(1, n + 1):
#     total *= i
# print(total)

"""Напишите программу, которая считывает 10 чисел и выводит произведение отличных от нуля чисел."""
# total = 1
# for i in range(10):
#     a = int(input())
#     if a != 0:
#         total *= a
# print(total)

"""На вход программе подается натуральное число n. Напишите программу, которая вычисляет сумму всех его делителей."""
# n, total = int(input()), 0
# for i in range(n + 1):
#     if n % i == 0:
#         total += i
# print(total)

"""На вход программе подается натуральное число n. 
Напишите программу вычисления знакочередующей суммы 1−2+3−4+5−6+…+(−1)**n+1 * n."""
# n = int(input())
# total = 0
# for i in range(1, n + 1):
#   if i % 2 == 0:
#     total -= i
#   else:
#     total += i
# print(total)

"""На вход программе подается натуральное число n, а затем n различных натуральных чисел, каждое на отдельной строке. 
Напишите программу, которая выводит наибольшее и второе наибольшее число последовательности."""
# n = int(input())
# max1, max2 = 0, 1
# for i in range(1, n+1):
#     num = int(input())
#     if num > max1:
#         max2 = max1
#         max1 = num
#     elif num > max2:
#         max2 = num
# print(max1, max2, sep='\n')

"""Напишите программу, которая считывает последовательность из 
10 целых чисел и определяет является ли каждое из них четным или нет."""
# flag = True
# for _ in range(10):
#     n = int(input())
#     if n % 2 != 0:
#         flag = False
# if flag is True:
#     print('YES')
# else:
#     print('NO')

"""Напишите программу, которая считывает натуральное число n и выводит первые n чисел последовательности Фибоначчи."""
# n = int(input())
# f1 = 0
# f2 = 1
# for i in range(n):
#     f1, f2 = f2, f2 + f1
#     print(f1, end=' ')

# n = int(input())
# x, y = 1, 0
# for i in range(n):
#     b = x
#     x = b + y
#     y = b
#     print(b, end=' ')

"""Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги обойдутся недешево, к тому же ведьмак 
не принимает купюры, он принимает только чеканные монеты. В мире ведьмака существуют монеты с номиналами 1,5,10,25.
Напишите программу, которая определяет какое минимальное количество чеканных монет нужно заплатить ведьмаку."""
# price = int(input())
# counter = 0
# while price >= 25:
# 	counter += 1
# 	price -= 25
# while price >= 10:
# 	counter += 1
# 	price -= 10
# while price >= 5:
# 	counter += 1
# 	price -= 5
# while price >= 1:
# 	counter += 1
# 	price -= 1
# print(counter)

"""Дано натуральное число n,(n≥10). Напишите программу, которая определяет его максимальную и минимальную цифры."""
# data = str(input())
# print(max(data), min(data))

# n = int(input())
# minn = maxx = n % 10
# while n > 0:
# 	if n % 10 > maxx:
# 		maxx = n % 10
# 	elif n % 10 < minn:
# 		minn = n % 10
# 	n = n // 10
# print('Максимальная цифра равна', maxx)
# print('Минимальная цифра равна', minn)

"""Дано натуральное число. Напишите программу, которая вычисляет:
сумму его цифр;
количество цифр в нем;
произведение его цифр;
среднее арифметическое его цифр;
его первую цифру;
сумму его первой и последней цифры."""
# n = int(input())
# total = counter = arithmetic = first_digit = total3 = 0
# total2 = 1
# last = n % 10
# while n != 0:
# 	last_digit = n % 10
# 	total += last_digit
# 	total2 *= last_digit
# 	first_digit = n
# 	counter += 1
# 	arithmetic = total / counter
# 	total3 = first_digit + last
# 	n = n // 10
# print(total, counter, total2, arithmetic, first_digit, total3, sep='\n')

"""Дано натуральное число n(n>9). Напишите программу, которая определяет его вторую (с начала) цифру."""
# n = int(input())
# while n > 9:
# 	last = n % 10
# 	num = last
# 	n //= 10
# print(num)

"""Дано натуральное число. Напишите программу, которая определяет, состоит ли указанное число из одинаковых цифр."""
# n = int(input())
# num = n % 10
# Flag = True
# while n != 0:
# 	last_digit = n % 10
# 	if last_digit != num:
# 		Flag = False
# 	n //= 10
#
# if Flag == True:
# 	print('YES')
# else:
# 	print('NO')

"""Дано натуральное число. Напишите программу, которая определяет, 
является ли последовательность его цифр при просмотре справа налево упорядоченной по неубыванию."""
# n = int(input())
# num = n % 10
# Flag = True
# while n != 0:
# 	last_digit = n % 10
# 	if last_digit < num:
# 		Flag = False
# 	num = last_digit
# 	n //= 10
# if Flag == True:
# 	print('YES')
# else:
# 	print('NO')

"""На вход программе подается число n>1. Напишите программу, которая выводит его наименьший отличный от 1 делитель."""
# num = int(input())
# for i in range(2, num + 1):
# 	if num % i == 0:
# 		print(i)
# 		break

"""На вход программе подается натуральное число n. Напишите программу, которая выводит числа от 1 до n включительно за исключением:
чисел от 5 до 9 включительно;
чисел от 17 до 37 включительно;
чисел от 78 до 87 включительно."""
# num = int(input())
# for i in range(1, num+1):
# 	if 5 <= i <= 9 or 17 <= i <= 37 or 78 <= i <= 87:
# 		continue
# 	print(i)

"""Boolean4°. Даны два целых числа: А, В. Проверить истинность высказывания: «Справедливы неравенства А > 2 и В ≤ 3»."""
# num1, num2 = int(input()), int(input())
# if num1 > 2 and num2 <= 3:
# 	print(True)
# else:
# 	print(False)

"""Boolean6°. Даны три целых числа: А, В, С. Проверить истинность высказывания: «Справедливо двойное неравенство А < В < С"""
# num1, num2, num3 = int(input()), int(input()), int(input())
# if num1 < num2 < num3:
# 	print(True)
# else:
# 	print(False)

# count = 0
# p = 1
# for i in range(1, 11):
#     x = int(input())
#     if x > 0:
#         p = p * x
#         count = count + 1
# if count < 10:
# 	print('NO')
# else:
# 	print(count)
# 	print(p)

# max1 = -(10 ** 6)
# total = 0
# for i in range(1, 11):
# 	x = int(input())
# 	if 0 > x > max1:
# 		total -= x
# 		max1 = x
# print(total)
# print(max1)

"""Дано натуральное число n. Напишите программу, которая печатает численный треугольник с высотой равной n, 
в соответствии с примером:
1
121
12321
1234321
123454321
..."""

# num = int(input())
# for i in range(1, num + 1):
# 	for j in range(1, i + 1):
# 		print(j, end='')
# 	for j in range(i - 1, 0, -1):
# 		print(j, end='')
# 	print()

"""На вход программе подается два натуральных числа a и b (a< b). 
Напишите программу, которая находит натуральное число из отрезка [a;b] с максимальной суммой делителей.
Пример ввода: 
1
10
Пример вывода:
10 18"""

# a, b = int(input()), int(input())
# max_num, max_sum = 0, 0
#
# for i in range(a, b+1):
# 	div_sum = sum([n for n in range(1, i+1) if i % n == 0])
# 	if div_sum >= max_sum:
# 		max_sum = div_sum
# 		max_num = i
#
# print(max_num, max_sum)

"""На вход программе подается натуральное число n. Напишите программу, выводящую графическое изображение делимости чисел от 
1 до n включительно. В каждой строке надо напечатать очередное число и столько символов «+», сколько делителей у этого числа."""

# num = int(input())
# for i in range(1, num+1):
# 	divisors = [k for k in range(1, i+1) if i % k == 0]
# 	print(str(i) + '+' * len(divisors))

"""На вход программе подается натуральное число n. Напишите программу, которая находит цифровой корень данного числа. 
Цифровой корень числа n получается следующим образом: если сложить все цифры этого числа, затем все цифры найденной суммы 
и повторить этот процесс, то в результате будет получено однозначное число (цифра), которое и называется цифровым корнем данного числа."""
# num = int(input())
# while num > 9:
# 	num = sum(map(int, str(num)))
# print(num)

"""Дано натуральное число n. Напишите программу, которая выводит значение суммы 1!+2!+3!+…+n!."""
# from math import factorial
# num = int(input())
# total = 0
# for i in range(1, num+1):
# 	sum = factorial(i)
# 	total += sum
# print(total)

"""На вход программе подается два натуральных числа a и b (a < b). 
Напишите программу, которая находит все простые числа от a до b включительно."""

# a, b = int(input()), int(input())
# for i in range(a, b+1):
# 	is_prime = True
# 	for k in range(2, i//2+1):
# 		if i % k == 0:
# 			is_prime = False
# 			break
# 	if is_prime and i > 1:
# 		print(i)

# class Orange:
# 	def __init__(self, w, c):
# 		self.weight = w
# 		self.color = c
# 		self.mold = 0
# 		print('Создано!')
#
# 	def rot(self, days, temp):
# 		self.mold = days * temp
#
# or1 = Orange(18, 'black')
# # or1.weight = 100
# # or1.color = 'blue'
# print(or1.mold)
# or1.rot(10, 22)
# print(or1.mold)

# class Rectangle():
# 	def __init__(self, w, l):
# 		self.width = w
# 		self.len = l
#
# 	def area(self):
# 		return self.width * self.len
#
# 	def change_size(self, w, l):
# 		self.width = w
# 		self.len = l


# class Apple():
# 	def __init__(self, a, b, c, d):
# 		self.absolute = a
# 		self.barrier = b
# 		self.courier = c
# 		self.determination = d
#
# from math import pi
# class Circle():
# 	def __init__(self, r):
# 		self.radius = r
#
# 	def area(self):
# 		return pi * (self.radius ** 2)
#
# circle_area = Circle(5)
# print(circle_area.area())

# class Triangle():
# 	def __init__(self, b, h):
# 		self.base = b
# 		self.height = h
#
# 	def area(self):
# 		return 1/2 * self.base * self.height
#
# triangle = Triangle(4, 5)
# print(triangle.area())

# class Hexagon():
# 	def __init__(self, a):
# 		self.side = a
#
# 	def calculate_perimeter(self):
# 		return 6 * self.side
#
# hexagon_side = Hexagon(6)
# print(hexagon_side.calculate_perimeter())

"""На вход программе подается одна строка. Напишите программу, которая выводит элементы строки с индексами 0, 2, 4, ... в столбик."""
# text = input()
# for i in range(0, len(text), 2):
# 	print(text[i])

"""На вход программе подается одна строка. Напишите программу, которая выводит в столбик элементы строки в обратном порядке."""
# text = input()
# for i in range(1, len(text) + 1):
# 	print(text[-i])

"""На вход программе подаются три строки: имя, фамилия и отчество. Напишите программу, которая выводит инициалы человека."""
# name, surname, lastname = input(), input(), input()
# print(name[0], surname[0], lastname[0], sep='')

"""На вход программе подается одна строка состоящая из цифр. Напишите программу, которая считает сумму цифр данной строки"""
# num = input()
# total = 0
# for i in range(len(num)):
# 	last_digit = int(num) % 10
# 	total += last_digit
# 	num = int(num) // 10
# print(total)

"""На вход программе подается одна строка. Напишите программу, которая выводит сообщение «Цифра» (без кавычек), 
если строка содержит цифру. В противном случае вывести сообщение «Цифр нет» (без кавычек)."""
# text = input()
# flag = False
# for char in text:
# 	if char.isdigit():
# 		flag = True
# 		break
# if flag:
# 	print('Цифра')
# else:
# 	print('Цифр нет')

"""На вход программе подается одна строка. Напишите программу, которая определяет сколько раз в строке встречаются символы + и *
Символ + встречается 5 раз
Символ * встречается 2 раз"""
# text = input()
# total_plus = 0
# total_star = 0
# for char in text:
# 	if char == '*':
# 		total_star += 1
# 	elif char == '+':
# 		total_plus += 1
# print('Символ + встречается', total_plus, 'раз')
# print('Символ * встречается', total_star, 'раз')

"""На вход программе подается одна строка. Напишите программу, которая определяет сколько в ней одинаковых соседних символов."""
# text = input()
# total = 0
# for i in range(1, len(text)):
# 	if text[i] == text[i-1]:
# 		total += 1
# print(total)

"""На вход программе подается одна строка с буквами русского языка. 
Напишите программу, которая определяет количество гласных и согласных букв.
Примечание. В русском языке 10 гласных букв (а, у, о, ы, и, э, я, ю, ё, е) и 21 согласная буква (б, в, г, д, ж, з, й, к, л, м, н, п, р, с, т, ф, х, ц, ч, ш, щ)."""
# text = input()
# vowels = 0
# consonants = 0
# for i in text:
# 	if i in 'ауоыиэяюёеАУОЫИЭЯЮЁЕ':
# 		vowels += 1
# 	elif i in 'бвгджзйклмнпрстфхцчшщБВГДЖЗЙКЛМНПРСТФХЦЧШЩ':
# 		consonants += 1
# print('Количество гласных букв равно', vowels)
# print('Количество согласных букв равно', consonants)

"""На вход программе подается натуральное число, записанное в десятичной системе счисления. 
Напишите программу, которая переводит данное число в двоичную систему счисления."""
# num = int(input())
# bin_str = ''
# while num != 0:
# 	last = num % 2
# 	bin_str = str(last) + bin_str
# 	num //= 2
# print(bin_str)

"""На вход программе подается одно слово, записанное в нижнем регистре. Напишите программу, которая определяет является ли оно палиндромом."""
# text = input().lower()
# if text == text[::-1]:
# 	print('YES')
# else:
# 	print('NO')

"""На вход программе подается одна строка. Напишите программу, которая выводит:
общее количество символов в строке;
исходную строку повторенную 3 раза;
первый символ строки;
первые три символа строки;
последние три символа строки;
строку в обратном порядке;
строку с удаленным первым и последним символом."""
# text = input()
# print(len(text), text * 3, text[0], text[:3], text[-3:], text[::-1], text[1:-1], sep='\n')


"""На вход программе подается одна строка. Напишите программу, которая выводит:
третий символ этой строки;
предпоследний символ этой строки;
первые пять символов этой строки;
всю строку, кроме последних двух символов;
все символы с четными индексами;
все символы с нечетными индексами;
все символы в обратном порядке;
все символы строки через один в обратном порядке, начиная с последнего."""
# text = input()
# print(text[2], text[-2], text[:5], text[:-2], text[::2], text[1::2], text[::-1], text[-1::-2], sep='\n')

"""На вход программе подается строка текста. Напишите программу, которая разрежет ее на две равные части, переставит их местами и выведет на экран."""
# text = input()
# if len(text) % 2 == 0:
# 	print(text[(len(text) // 2):] + text[:len(text) // 2])
# else:
# 	print(text[(len(text) // 2 + 1):] + text[:len(text) // 2 + 1])


# s = 'Askar S'
# print(s.capitalize())
# print(s.swapcase())
# print(s.title())
# print(s.lower())
# print(s.upper())

"""Таблица "Функции и методы строк"

# S = 'str'; S = "str"; S = '''str''';

S1 + S2 Конкатенация (сложение строк)

S1 * 3 Повторение строки

S[i] Обращение по индексу

S[i:j:step] Извлечение среза

len(S) Длина строки

S.find(str, [start],[end]) Поиск подстроки в строке. Возвращает номер первого вхождения или -1

S.rfind(str, [start],[end]) Поиск подстроки в строке. Возвращает номер последнего вхождения или -1

S.index(str, [start],[end]) Поиск подстроки в строке. Возвращает номер первого вхождения или вызывает ValueError

S.rindex(str, [start],[end]) Поиск подстроки в строке. Возвращает номер последнего вхождения или вызывает ValueError

S.replace(шаблон, замена) Замена шаблона

S.split(символ) Разбиение строки по разделителю

S.isdigit() Состоит ли строка из цифр

S.isalpha() Состоит ли строка из букв

S.isalnum() Состоит ли строка из цифр или букв

S.islower() Состоит ли строка из символов в нижнем регистре

S.isupper() Состоит ли строка из символов в верхнем регистре

S.isspace() Состоит ли строка из неотображаемых символов (пробел, символ перевода страницы ('\f'), "новая строка" ('\n'), "перевод каретки" ('\r'), "горизонтальная табуляция" ('\t') и "вертикальная табуляция" ('\v'))

S.istitle() Начинаются ли слова в строке с заглавной буквы

S.upper() Преобразование строки к верхнему регистру

S.lower() Преобразование строки к нижнему регистру

S.startswith(str) Начинается ли строка S с шаблона str

S.endswith(str) Заканчивается ли строка S шаблоном str

S.join(список) Сборка строки из списка с разделителем S

ord(символ) Символ в его код ASCII

chr(число) Код ASCII в символ

S.capitalize() Переводит первый символ строки в верхний регистр, а все остальные в нижний

S.center(width, [fill]) Возвращает отцентрованную строку, по краям которой стоит символ fill (пробел по умолчанию)

S.count(str, [start],[end]) Возвращает количество непересекающихся вхождений подстроки в диапазоне [начало, конец] (0 и длина строки по умолчанию)

S.expandtabs([tabsize]) Возвращает копию строки, в которой все символы табуляции заменяются одним или несколькими пробелами, в зависимости от текущего столбца. Если TabSize не указан, размер табуляции полагается равным 8 пробелам

S.lstrip([chars]) Удаление пробельных символов в начале строки

S.rstrip([chars]) Удаление пробельных символов в конце строки

S.strip([chars]) Удаление пробельных символов в начале и в конце строки

S.partition(шаблон) Возвращает кортеж, содержащий часть перед первым шаблоном, сам шаблон, и часть после шаблона. Если шаблон не найден, возвращается кортеж, содержащий саму строку, а затем две пустых строки

S.rpartition(sep) Возвращает кортеж, содержащий часть перед последним шаблоном, сам шаблон, и часть после шаблона. Если шаблон не найден, возвращается кортеж, содержащий две пустых строки, а затем саму строку

S.swapcase() Переводит символы нижнего регистра в верхний, а верхнего – в нижний

S.title() Первую букву каждого слова переводит в верхний регистр, а все остальные в нижний

S.zfill(width) Делает длину строки не меньшей width, по необходимости заполняя первые символы нулями

S.ljust(width, fillchar=" ") Делает длину строки не меньшей width, по необходимости заполняя последние символы символом fillchar

S.rjust(width, fillchar=" ") Делает длину строки не меньшей width, по необходимости заполняя первые символы символом fillchar"""


"""На вход программе подается строка состоящая из имени и фамилии человека, разделенных одним пробелом. 
Напишите программу, которая проверяет, что имя и фамилия начинаются с заглавной буквы."""
# name = input()
# if name == name.title():
# 	print('YES')
# else:
# 	print('NO')

"""На вход программе подается строка. 
Напишите программу, которая меняет регистр символов, другими словами замените все строчные символы заглавными и наоборот."""
# text = input()
# print(text.swapcase())

"""На вход программе подается строка текста. Напишите программу, которая определяет является ли оттенок текста хорошим или нет. 
Текст имеет хороший оттенок, если содержит подстроку «хорош» во всевозможных регистрах."""
# text = input().lower()
# if 'хорош' in text:
# 	print('YES')
# else:
# 	print('NO')

"""На вход программе подается строка. Напишите программу, которая подсчитывает количество буквенных символов в нижнем регистре."""
# text = input()
# total = 0
# for i in range(len(text)):
# 	if 'a' <= text[i] <= 'z':
# 		total += 1
# print(total)

# string = input()
# count = 0
# for char in string:
#     if char.isalpha() and char.islower():
#         count += 1
# print(count)

# s = '   Askar Smagulov   '
# print(s.count('ov', 0, 5)) # количество непересекающихся вхождений подстроки, можно передать значения start и end
# print(s.startswith('Ask')) # начинается ли с подстроки 'Ask'
# print(s.endswith('ov'))
# print(s.find('Smag'))
# print(s.rfind('k'))
# print(s.index('Ask'))
# print(s.rindex('ov'))
# print(s.strip())
# print(s.lstrip(' A'))
# print(s.rstrip('v '))
# print(s.replace('Askar', 'Oskar')) # можно задать необходимое количество замен (что заменить, на что заменить, сколько раз)

"""На вход программе подается строка текста, состоящая из слов, разделенных ровно одним пробелом. Напишите программу, которая подсчитывает количество слов в ней."""
# text = input()
# print(text.count(' ') + 1)

"""На вход программе подается строка генетического кода, состоящая из букв А (аденин), Г (гуанин), Ц (цитозин), Т (тимин). 
Напишите программу, которая подсчитывает сколько аденина, гуанина, цитозина и тимина входит в данную строку генетического кода."""
# text = input().lower()
# ad, gu, ci, ti = 0, 0, 0, 0
# for i in range(len(text)):
# 	if text[i] == 'а':
# 		ad += 1
# 	elif text[i] == 'г':
# 		gu += 1
# 	elif text[i] == 'ц':
# 		ci += 1
# 	elif text[i] == 'т':
# 		ti += 1
# print('Аденин:', ad)
# print('Гуанин:', gu)
# print('Цитозин:', ci)
# print('Тимин:', ti)

"""Джим Хоппер с помощью радиоприемника пытается получить сообщение Оди. На приемник ему поступает
n различных последовательностей кода Морзе. Декодировав их, он получает последовательности из цифр и строчного латинского алфавита, 
при этом во всех сообщениях Оди содержится число 11, причем минимум 3 раза. Помогите определить Джиму количество сообщений от Оди."""
# n = int(input())
# sms = input()

"""Вводятся 3 строки в случайном порядке. 
Напишите программу, которая выясняет можно ли из длин этих строк построить возрастающую арифметическую прогрессию."""
# t1, t2, t3 = input(), input(), input()
# if len(t1) == (len(t2) + len(t3)) / 2 or len(t2) == (len(t1) + len(t3)) / 2 or len(t3) == (len(t2) + len(t1)) / 2:
# 	print('YES')
# else:
# 	print('NO')

"""Напишите программу, которая считывает одну строку, после чего выводит «YES», 
если в введенной строке есть подстрока «синий» и «NO» в противном случае."""
# text = input()
# s = 'синий'
# if s in text:
# 	print('YES')
# else:
# 	print('NO')

"""Напишите программу, которая считывает одну строку, после чего выводит «YES», 
если в введённой строке есть подстрока «суббота» или «воскресенье», и «NO» в противном случае."""
# text = input()
# s = 'суббота'
# b = 'воскресенье'
# if s in text or b in text:
# 	print('YES')
# else:
# 	print('NO')

"""Будем считать email адрес корректным, если в нем есть символ собачки (@) и точки. 
Напишите программу проверяющую корректность email адреса."""

# email = input()
# b, c = '@', '.'
# if b in email and c in email:
# 	print('YES')
# else:
# 	print('NO')

"""На вход программе подается натуральное число n. Напишите программу, которая печатает звездную рамку размерами n×19."""
# num = int(input())
# for i in range(1, num + 1):
# 	if i == 1 or i == num:
# 		print('*' * 19)
# 	else:
# 		print('*' + ' ' * 17 + '*')

"""Дано натуральное число n(n>99). Напишите программу, которая определяет его третью (с начала) цифру."""
# num = int(input())
# while num > 999:
# 	num //= 10
# print(num % 10)

"""Дано натуральное число. Напишите программу, которая вычисляет:

количество цифр 3 в нем;
сколько раз в нем встречается последняя цифра;
количество четных цифр;
сумму его цифр, больших пяти;
произведение цифр, больших семи (если цифр больших семи нет, то вывести 1, если такая цифра одна, то вывести ее);
сколько раз в нем встречается цифры 0 и 5 (всего суммарно)."""

# num = int(input())
#
# count_3, count_even, count_last, count_0_5 = 0, 0, 1, 0
# total_more_than_5, multiple_more_than_7 = 0, 1
# lastest = num % 10
# flag = False
#
# while num != 0:
# 	last_digit = num % 10
# 	if last_digit == 3:
# 		count_3 += 1
# 	if last_digit % 2 == 0:
# 		count_even += 1
# 	if last_digit > 5:
# 		total_more_than_5 += last_digit
# 	if last_digit > 7:
# 		flag = True
# 		multiple_more_than_7 *= last_digit
# 	if last_digit == 0 or last_digit == 5:
# 		count_0_5 += 1
# 	num //= 10
# 	if lastest == num % 10:
# 		count_last += 1
#
# print(count_3, count_last, count_even, total_more_than_5, multiple_more_than_7, count_0_5, sep='\n')

"""Сриниваса Рамануджан – индийский математик, славившийся своей интуицией в области чисел. Когда английский математик 
Годфри Харди навестил его однажды в больнице, он обмолвился, что номером такси, на котором он приехал, было 1729, 
такое скучное и заурядное число. На что Рамануджан ответил: "Нет, нет! Это очень интересное число. Это наименьшее число, 
выражаемое как сумма двух кубов двумя разными способами". Другими словами: 1729 = 1**3 + 12**3 = 9**3 + 10**3.
Напишите программу, которая находит аналогичные интересные числа. В ответе запишите первые 5 чисел в порядке возрастания, включая число
1729."""

# import itertools
#
# count = 0
# n = 1
#
# while count < 5:
#     cubes = [i**3 for i in range(1, int(n**(1/3))+1)]
#     sums = set(sum(pair) for pair in itertools.combinations(cubes, 2))
#     interesting_sums = [s for s in sums if list(sums).count(s) > 1]
#     for i_sum in interesting_sums:
#         count += 1
#         print(i_sum, '=', '^3 + '.join(str(c**(1/3)) for c in itertools.combinations(cubes, 2) if sum(c) == i_sum))
#         if count >= 5:
#             break
#     n += 1